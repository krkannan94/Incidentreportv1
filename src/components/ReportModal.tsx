import { useState } from 'react';
import { Button } from './ui/button';
import { Dialog, DialogContent, DialogHeader, DialogTitle, DialogDescription } from './ui/dialog';
import { Download, Mail, Copy, FileText, X } from 'lucide-react';
import { Report } from '../lib/supabase';
import { generateReportPDF } from '../lib/pdfGenerator';

interface ReportModalProps {
  isOpen: boolean;
  onClose: () => void;
  report: Report;
  userName: string;
}

export function ReportModal({ isOpen, onClose, report, userName }: ReportModalProps) {
  const [copied, setCopied] = useState(false);

  const formatDate = (dateString: string) => {
    return new Date(dateString).toLocaleString('en-US', {
      year: 'numeric',
      month: 'long',
      day: 'numeric',
      hour: '2-digit',
      minute: '2-digit',
    });
  };

  const generateReportText = () => {
    return `CBRE INCIDENT REPORT
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

Generated: ${new Date().toLocaleString()}
Report ID: ${report.id}

INCIDENT INFORMATION
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

Reported By: ${userName}
Report Type: ${report.report_type === 'vocal' ? 'Vocal Report' : 'Written Report'}
${report.language ? `Language: ${report.language}` : ''}
Incident Type: ${report.incident_type}
Location: ${report.location}
Date: ${formatDate(report.incident_date)}

DESCRIPTION
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

${report.description}

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
Generated by CBRE AI Incident Reporter`;
  };

  const reportText = generateReportText();

  const handleCopy = () => {
    navigator.clipboard.writeText(reportText);
    setCopied(true);
    setTimeout(() => setCopied(false), 2000);
  };

  const handleDownloadPDF = () => {
    generateReportPDF(report, userName);
  };

  const handleEmail = () => {
    const subject = `CBRE Incident Report - ${report.incident_type}`;
    const body = encodeURIComponent(reportText);
    window.location.href = `mailto:?subject=${encodeURIComponent(subject)}&body=${body}`;
  };

  return (
    <Dialog open={isOpen} onOpenChange={onClose}>
      <DialogContent className="max-w-4xl max-h-[90vh] overflow-hidden flex flex-col">
        <DialogHeader>
          <DialogTitle className="flex items-center space-x-3">
            <div className="w-10 h-10 bg-gradient-to-br from-[#00A862] to-[#00C878] rounded-xl flex items-center justify-center shadow-md">
              <FileText className="w-6 h-6 text-white" />
            </div>
            <span className="text-2xl">Incident Report</span>
          </DialogTitle>
          <DialogDescription>
            Review your comprehensive incident report
          </DialogDescription>
        </DialogHeader>

        <div className="flex-1 overflow-y-auto bg-gradient-to-br from-slate-50 to-slate-100 rounded-2xl p-6 my-4">
          <div className="bg-white rounded-2xl shadow-md p-6 space-y-4">
            <div className="flex items-center justify-between pb-4 border-b border-slate-200">
              <div>
                <h3 className="text-lg font-bold text-slate-800">Report Details</h3>
                <p className="text-sm text-slate-500">ID: {report.id}</p>
              </div>
              <div className="flex items-center space-x-2">
                <span className={`px-3 py-1 rounded-full text-xs font-semibold ${
                  report.report_type === 'vocal'
                    ? 'bg-purple-100 text-purple-700'
                    : 'bg-green-100 text-green-700'
                }`}>
                  {report.report_type === 'vocal' ? 'Vocal Report' : 'Written Report'}
                </span>
                {report.language && (
                  <span className="px-3 py-1 rounded-full text-xs font-semibold bg-blue-100 text-blue-700">
                    {report.language}
                  </span>
                )}
              </div>
            </div>

            <div className="grid grid-cols-2 gap-4">
              <div>
                <p className="text-sm text-slate-500 mb-1">Reported By</p>
                <p className="font-semibold text-slate-800">{userName}</p>
              </div>
              <div>
                <p className="text-sm text-slate-500 mb-1">Incident Type</p>
                <p className="font-semibold text-slate-800">{report.incident_type}</p>
              </div>
              <div>
                <p className="text-sm text-slate-500 mb-1">Location</p>
                <p className="font-semibold text-slate-800">{report.location}</p>
              </div>
              <div>
                <p className="text-sm text-slate-500 mb-1">Date & Time</p>
                <p className="font-semibold text-slate-800">{formatDate(report.incident_date)}</p>
              </div>
            </div>

            <div className="pt-4 border-t border-slate-200">
              <p className="text-sm text-slate-500 mb-2">Description</p>
              <p className="text-slate-700 leading-relaxed whitespace-pre-wrap">{report.description}</p>
            </div>

            <div className="pt-4 border-t border-slate-200">
              <p className="text-xs text-slate-400">
                Generated on {formatDate(report.created_at)}
              </p>
            </div>
          </div>
        </div>

        <div className="grid grid-cols-2 md:grid-cols-4 gap-3">
          <Button
            onClick={handleDownloadPDF}
            className="h-12 rounded-2xl bg-gradient-to-r from-[#00A862] to-[#00C878] hover:from-[#009656] hover:to-[#00B86C] text-white font-semibold shadow-md hover:shadow-lg transition-all flex items-center justify-center space-x-2"
          >
            <Download className="w-5 h-5" />
            <span>PDF</span>
          </Button>

          <Button
            onClick={handleEmail}
            variant="outline"
            className="h-12 rounded-2xl border-2 border-blue-500 text-blue-600 hover:bg-blue-50 font-semibold flex items-center justify-center space-x-2"
          >
            <Mail className="w-5 h-5" />
            <span>Email</span>
          </Button>

          <Button
            onClick={handleCopy}
            variant="outline"
            className="h-12 rounded-2xl border-2 border-slate-300 hover:bg-slate-50 font-semibold flex items-center justify-center space-x-2"
          >
            <Copy className="w-5 h-5" />
            <span>{copied ? 'Copied!' : 'Copy'}</span>
          </Button>

          <Button
            onClick={onClose}
            variant="outline"
            className="h-12 rounded-2xl border-2 border-slate-300 hover:bg-slate-50 font-semibold flex items-center justify-center space-x-2"
          >
            <X className="w-5 h-5" />
            <span>Close</span>
          </Button>
        </div>
      </DialogContent>
    </Dialog>
  );
}
